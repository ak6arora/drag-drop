{"version":3,"sources":["components/Pagination.js","index.js"],"names":["LEFT_PAGE","RIGHT_PAGE","range","from","to","step","arguments","length","undefined","i","push","Pagination","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","gotoPage","page","_this$props$onPageCha","onPageChanged","f","currentPage","Math","max","min","totalPages","paginationData","pageLimit","totalRecords","setState","handleClick","evt","preventDefault","handleMoveLeft","state","pageNeighbours","handleMoveRight","fetchPageNumbers","totalNumbers","pages","leftBound","rightBound","beforeLastPage","startPage","endPage","singleSpillOffset","leftSpill","rightSpill","leftSpillPage","rightSpillPage","extraPages","concat","toConsumableArray","_props$totalRecords","_props$pageLimit","_props$pageNeighbours","ceil","_this2","react_default","a","createElement","react","className","href","onClick","e","map","index","key","aria-label","aria-hidden","Component","App","start","list","Todos","filter","todo","id","onDragStart","dragSrcIndex","dt","dataTransfer","effectAllowed","setData","target","innerHTML","onDragOver","dropEffect","onDrop","stopPropagation","el","splice","console","log","onDragEnd","backend","document","documentElement","TouchBackend","HTML5Backend","_this$state","draggable","onDragStartCapture","title","split","components_Pagination","React","rootElement","getElementById","ReactDOM","render","src_App_0"],"mappings":"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","file":"static/js/main.d5660dbc.chunk.js","sourcesContent":["import React, { Component, Fragment } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst LEFT_PAGE = \"LEFT\";\r\nconst RIGHT_PAGE = \"RIGHT\";\r\n\r\nconst range = (from, to, step = 1) => {\r\n  let i = from;\r\n  const range = [];\r\n\r\n  while (i <= to) {\r\n    range.push(i);\r\n    i += step;\r\n  }\r\n\r\n  return range;\r\n};\r\n\r\nclass Pagination extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    const { totalRecords = null, pageLimit = 30, pageNeighbours = 0 } = props;\r\n\r\n    this.pageLimit = typeof pageLimit === \"number\" ? pageLimit : 30;\r\n    this.totalRecords = typeof totalRecords === \"number\" ? totalRecords : 0;\r\n\r\n    this.pageNeighbours =\r\n      typeof pageNeighbours === \"number\"\r\n        ? pageNeighbours : 2\r\n\r\n    this.totalPages = Math.ceil(this.totalRecords / this.pageLimit);\r\n\r\n    this.state = { currentPage: 1 };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.gotoPage(1);\r\n  }\r\n\r\n  gotoPage = page => {\r\n    const { onPageChanged = f => f } = this.props;\r\n\r\n    const currentPage = Math.max(0, Math.min(page, this.totalPages));\r\n\r\n    const paginationData = {\r\n      currentPage,\r\n      totalPages: this.totalPages,\r\n      pageLimit: this.pageLimit,\r\n      totalRecords: this.totalRecords\r\n    };\r\n\r\n    this.setState({ currentPage }, () => onPageChanged(paginationData));\r\n  };\r\n\r\n  handleClick = (page, evt) => {\r\n    evt.preventDefault();\r\n    this.gotoPage(page);\r\n  };\r\n\r\n  handleMoveLeft = evt => {\r\n    evt.preventDefault();\r\n    this.gotoPage(this.state.currentPage - this.pageNeighbours * 2 - 1);\r\n  };\r\n\r\n  handleMoveRight = evt => {\r\n    evt.preventDefault();\r\n    this.gotoPage(this.state.currentPage + this.pageNeighbours * 2 + 1);\r\n  };\r\n\r\n  fetchPageNumbers = () => {\r\n    const totalPages = this.totalPages;\r\n    const currentPage = this.state.currentPage;\r\n    const pageNeighbours = this.pageNeighbours;\r\n\r\n    const totalNumbers = this.pageNeighbours * 2 + 3;\r\n    const totalBlocks = totalNumbers + 2;\r\n\r\n    if (totalPages > totalBlocks) {\r\n      let pages = [];\r\n\r\n      const leftBound = currentPage - pageNeighbours;\r\n      const rightBound = currentPage + pageNeighbours;\r\n      const beforeLastPage = totalPages - 1;\r\n\r\n      const startPage = leftBound > 2 ? leftBound : 2;\r\n      const endPage = rightBound < beforeLastPage ? rightBound : beforeLastPage;\r\n\r\n      pages = range(startPage, endPage);\r\n\r\n      const pagesCount = pages.length;\r\n      const singleSpillOffset = totalNumbers - pagesCount - 1;\r\n\r\n      const leftSpill = startPage > 2;\r\n      const rightSpill = endPage < beforeLastPage;\r\n\r\n      const leftSpillPage = LEFT_PAGE;\r\n      const rightSpillPage = RIGHT_PAGE;\r\n\r\n      if (leftSpill && !rightSpill) {\r\n        const extraPages = range(startPage - singleSpillOffset, startPage - 1);\r\n        pages = [leftSpillPage, ...extraPages, ...pages];\r\n      } else if (!leftSpill && rightSpill) {\r\n        const extraPages = range(endPage + 1, endPage + singleSpillOffset);\r\n        pages = [...pages, ...extraPages, rightSpillPage];\r\n      } else if (leftSpill && rightSpill) {\r\n        pages = [leftSpillPage, ...pages, rightSpillPage];\r\n      }\r\n\r\n      return [1, ...pages, totalPages];\r\n    }\r\n\r\n    return range(1, totalPages);\r\n  };\r\n\r\n  render() {\r\n    if (!this.totalRecords) return null;\r\n\r\n    if (this.totalPages === 1) return null;\r\n\r\n    const { currentPage } = this.state;\r\n    const pages = this.fetchPageNumbers();\r\n\r\n    return (\r\n      <Fragment>\r\n        <nav>\r\n          <ul className=\"pagination\">\r\n            {\r\n              currentPage>1 && \r\n              <li\r\n                  className=\"page-item\"\r\n                >\r\n                  <a\r\n                    className=\"page-link\"\r\n                    href=\"#\"\r\n                    onClick={e => this.handleClick(currentPage - 1, e)}\r\n                  >\r\n                    &lsaquo;\r\n                  </a>\r\n                </li>\r\n            }\r\n            {pages.map((page, index) => {\r\n              if (page === LEFT_PAGE)\r\n                return (\r\n                  <li key={index} className=\"page-item\">\r\n                    <a\r\n                      className=\"page-link\"\r\n                      href=\"#\"\r\n                      aria-label=\"Previous\"\r\n                      onClick={this.handleMoveLeft}\r\n                    >\r\n                      <span aria-hidden=\"true\">&hellip;</span>\r\n                    </a>\r\n                  </li>\r\n                );\r\n\r\n              if (page === RIGHT_PAGE)\r\n                return (\r\n                  <li key={index} className=\"page-item\">\r\n                    <a\r\n                      className=\"page-link\"\r\n                      href=\"#\"\r\n                      aria-label=\"Next\"\r\n                      onClick={this.handleMoveRight}\r\n                    >\r\n                      <span aria-hidden=\"true\">&hellip;</span>\r\n                    </a>\r\n                  </li>\r\n                );\r\n\r\n              return (\r\n                <li\r\n                  key={index}\r\n                  className={`page-item${\r\n                    currentPage === page ? \" active\" : \"\"\r\n                  }`}\r\n                >\r\n                  <a\r\n                    className=\"page-link\"\r\n                    href=\"#\"\r\n                    onClick={e => this.handleClick(page, e)}\r\n                  >\r\n                    {page}\r\n                  </a>\r\n                </li>\r\n              );\r\n            })}\r\n            \r\n            {\r\n              currentPage<this.totalPages && \r\n              <li\r\n                  className=\"page-item\"\r\n                >\r\n                  <a\r\n                    className=\"page-link\"\r\n                    href=\"#\"\r\n                    onClick={e => this.handleClick(currentPage + 1, e)}\r\n                  >\r\n                    &rsaquo;\r\n                  </a>\r\n                </li>\r\n            }\r\n          </ul>\r\n        </nav>\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nPagination.propTypes = {\r\n  totalRecords: PropTypes.number.isRequired,\r\n  pageLimit: PropTypes.number,\r\n  pageNeighbours: PropTypes.number,\r\n  onPageChanged: PropTypes.func\r\n};\r\n\r\nexport default Pagination;\r\n","\r\nimport React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport Example from './example'\r\nimport { DndProvider } from 'react-dnd'\r\nimport HTML5Backend from 'react-dnd-html5-backend'\r\nimport TouchBackend from 'react-dnd-touch-backend'\r\nimport Pagination from './components/Pagination'\r\nimport * as Todos from './todos.json';\r\nimport 'drag-drop-touch-polyfill/DragDropTouch.js'\r\n\r\nclass App extends React.Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.backend = (\"ontouchstart\" in document.documentElement) ? TouchBackend : HTML5Backend;\r\n\t\tthis.state = {\r\n\t\t\tlist: Todos.default.filter(todo => todo.id <= 10),\r\n\t\t\tpageLimit: 10\r\n\t\t}\r\n\t\tthis.dragSrcIndex = null\r\n\t}\r\n\r\n\tonPageChanged = (page) => {\r\n\t\tconst { currentPage, pageLimit } = page;\r\n\t\tlet start = (currentPage - 1) * pageLimit;\r\n\t\tthis.setState({\r\n\t\t\tlist: Todos.default.filter(todo => todo.id > start && todo.id <= start + pageLimit)\r\n\t\t})\r\n\t}\r\n\r\n\tonDragStart = (e, i) => {\r\n\t\tthis.dragSrcIndex = i;\r\n\t\tvar dt = e.dataTransfer;\r\n\t\tdt.effectAllowed = 'move';\r\n\t\tdt.setData('text', e.target.innerHTML);\r\n\t\treturn false;\r\n\t}\r\n\r\n\tonDragOver = (e) => {\r\n\t\tif (this.dragSrcIndex!==null) {\r\n\t\t\te.preventDefault();\r\n\t\t\te.dataTransfer.dropEffect = 'move';\r\n\t\t}\r\n\t}\r\n\r\n\tonDrop = (e, i) => {\r\n\t\tlet {list} = this.state;\r\n\t\tif (this.dragSrcIndex!==null) {\r\n\t\t\te.stopPropagation();\r\n\t\t\t// e.stopImmediatePropagation();\r\n\t\t\te.preventDefault();\r\n\t\t\tif (this.dragSrcIndex != i) {\r\n\t\t\t\t\tlet el = list.splice(this.dragSrcIndex, 1);\r\n\t\t\t\t\tconsole.log(el)\r\n\t\t\t\t\tlist.splice(i, 0, el[0]);\r\n\t\t\t\t\tthis.setState({list})\r\n\t\t\t}\r\n\t}\r\n\t}\r\n\tonDragEnd = (e) => {\r\n\t\tthis.dragSrcIndex = null\r\n\t}\r\n\trender() {\r\n\t\tconst { list, pageLimit } = this.state;\r\n\t\treturn (\r\n\t\t\t<div>\r\n\t\t\t\t<div className=\"container\">\r\n\t\t\t\t\t{/* <DndProvider backend={this.backend}>\r\n\t\t\t\t\t\t<Example />\r\n\t\t\t\t\t</DndProvider> */}\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tlist.map((todo, index) => {\r\n\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t<div draggable={true} className=\"card\"\r\n\t\t\t\t\t\t\t\t\tonDragStartCapture={(e) => this.onDragStart(e, index)}\r\n\t\t\t\t\t\t\t\t\tonDragOver={this.onDragOver}\r\n\t\t\t\t\t\t\t\t\tonDragEnd={this.onDragEnd}\r\n\t\t\t\t\t\t\t\t\tonDrop={(e) => this.onDrop(e, index)}>\r\n\t\t\t\t\t\t\t\t\t{todo.title.split(\" \")[1]}\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t}\r\n\t\t\t\t</div>\r\n\t\t\t\t<div>\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tlist.map(todo => <p key={todo.id}>{todo.id} - {todo.title}</p>)\r\n\t\t\t\t\t}\r\n\t\t\t\t</div>\r\n\t\t\t\t<Pagination\r\n\t\t\t\t\ttotalRecords={Todos.default.length}\r\n\t\t\t\t\tpageLimit={pageLimit}\r\n\t\t\t\t\tpageNeighbours={3}\r\n\t\t\t\t\tonPageChanged={this.onPageChanged}\r\n\t\t\t\t/>\r\n\t\t\t</div>\r\n\t\t)\r\n\t}\r\n}\r\n\r\nconst rootElement = document.getElementById('root')\r\nReactDOM.render(<App />, rootElement)\r\n"],"sourceRoot":""}