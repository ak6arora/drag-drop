{"version":3,"sources":["ItemTypes.js","Card.jsx","example.jsx","components/Pagination.js","index.js"],"names":["ItemTypes","style","border","padding","margin","backgroundColor","cursor","Card","_ref","id","text","index","moveCard","ref","useRef","_useDrop","useDrop","accept","hover","item","monitor","current","dragIndex","hoverIndex","hoverBoundingRect","getBoundingClientRect","hoverMiddleY","bottom","top","hoverClientY","getClientOffset","y","drop","Object","slicedToArray","_useDrag","useDrag","type","collect","isDragging","_useDrag2","opacity","drag","react_default","a","createElement","objectSpread","Container","_useState","useState","_useState2","cards","setCards","useCallback","dragCard","update","$splice","Fragment","className","map","card","i","src_Card","key","renderCard","LEFT_PAGE","RIGHT_PAGE","range","from","to","step","arguments","length","undefined","push","Pagination","props","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","gotoPage","page","_this$props$onPageCha","onPageChanged","f","currentPage","Math","max","min","totalPages","paginationData","pageLimit","totalRecords","setState","handleClick","evt","preventDefault","handleMoveLeft","state","pageNeighbours","handleMoveRight","fetchPageNumbers","totalNumbers","pages","leftBound","rightBound","beforeLastPage","startPage","endPage","singleSpillOffset","leftSpill","rightSpill","leftSpillPage","rightSpillPage","extraPages","concat","toConsumableArray","_props$totalRecords","_props$pageLimit","_props$pageNeighbours","ceil","_this2","react","href","onClick","e","aria-label","aria-hidden","Component","App","start","console","log","list","Todos","filter","todo","backend","document","documentElement","TouchBackend","HTML5Backend","_this$state","esm","example","title","components_Pagination","React","rootElement","getElementById","ReactDOM","render","src_App"],"mappings":"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","file":"static/js/main.519a547c.chunk.js","sourcesContent":["export default {\n  CARD: 'card',\n}\n","import React, { useRef } from 'react'\nimport { useDrag, useDrop } from 'react-dnd'\nimport ItemTypes from './ItemTypes'\nconst style = {\n  border: '1px dashed gray',\n  padding: '0.5rem 1rem',\n  margin: '0 .5rem 1rem 0',\n  backgroundColor: 'white',\n  cursor: 'move',\n}\nconst Card = ({ id, text, index, moveCard }) => {\n  const ref = useRef(null)\n  const [, drop] = useDrop({\n    accept: ItemTypes.CARD,\n    hover(item, monitor) {\n      if (!ref.current) {\n        return\n      }\n      const dragIndex = item.index\n      const hoverIndex = index\n      // Don't replace items with themselves\n      if (dragIndex === hoverIndex) {\n        return\n      }\n      // Determine rectangle on screen\n      const hoverBoundingRect = ref.current.getBoundingClientRect()\n      // Get vertical middle\n      const hoverMiddleY =\n        (hoverBoundingRect.bottom - hoverBoundingRect.top) / 2\n      // Determine mouse position\n      const clientOffset = monitor.getClientOffset()\n      // Get pixels to the top\n      const hoverClientY = clientOffset.y - hoverBoundingRect.top\n      // Only perform the move when the mouse has crossed half of the items height\n      // When dragging downwards, only move when the cursor is below 50%\n      // When dragging upwards, only move when the cursor is above 50%\n      // Dragging downwards\n      if (dragIndex < hoverIndex && hoverClientY < hoverMiddleY) {\n        return\n      }\n      // Dragging upwards\n      if (dragIndex > hoverIndex && hoverClientY > hoverMiddleY) {\n        return\n      }\n      // Time to actually perform the action\n      moveCard(dragIndex, hoverIndex)\n      // Note: we're mutating the monitor item here!\n      // Generally it's better to avoid mutations,\n      // but it's good here for the sake of performance\n      // to avoid expensive index searches.\n      item.index = hoverIndex\n    },\n  })\n  const [{ isDragging }, drag] = useDrag({\n    item: { type: ItemTypes.CARD, id, index },\n    collect: monitor => ({\n      isDragging: monitor.isDragging(),\n    }),\n  })\n  const opacity = isDragging ? 0 : 1\n  drag(drop(ref))\n  return (\n    <div ref={ref} style={{ ...style, opacity }}>\n      {text}\n    </div>\n  )\n}\nexport default Card\n","import React, { useState, useCallback } from 'react'\nimport Card from './Card'\nimport update from 'immutability-helper'\nimport  \"./app.css\";\nconst Container = () => {\n  {\n    const [cards, setCards] = useState([\n      {\n        id: 1,\n        text: 'Java',\n      },\n      {\n        id: 2,\n        text: 'C++',\n      },\n      {\n        id: 3,\n        text: 'ASP.NET',\n      },\n      {\n        id: 4,\n        text: 'Javascript',\n      },\n      {\n        id: 5,\n        text:\n          'Python',\n      },\n      {\n        id: 6,\n        text: 'Node.js'\n      }\n    ])\n    const moveCard = useCallback(\n      (dragIndex, hoverIndex) => {\n        const dragCard = cards[dragIndex]\n        setCards(\n          update(cards, {\n            $splice: [\n              [dragIndex, 1],\n              [hoverIndex, 0, dragCard],\n            ],\n          }),\n        )\n      },\n      [cards],\n    )\n    const renderCard = (card, index) => {\n      return (\n        <Card\n          key={card.id}\n          index={index}\n          id={card.id}\n          text={card.text}\n          moveCard={moveCard}\n        />\n      )\n    }\n    return (\n      <>\n        <div className=\"container\">{cards.map((card, i) => renderCard(card, i))}</div>\n      </>\n    )\n  }\n}\nexport default Container\n","import React, { Component, Fragment } from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst LEFT_PAGE = \"LEFT\";\nconst RIGHT_PAGE = \"RIGHT\";\n\nconst range = (from, to, step = 1) => {\n  let i = from;\n  const range = [];\n\n  while (i <= to) {\n    range.push(i);\n    i += step;\n  }\n\n  return range;\n};\n\nclass Pagination extends Component {\n  constructor(props) {\n    super(props);\n    const { totalRecords = null, pageLimit = 30, pageNeighbours = 0 } = props;\n\n    this.pageLimit = typeof pageLimit === \"number\" ? pageLimit : 30;\n    this.totalRecords = typeof totalRecords === \"number\" ? totalRecords : 0;\n\n    this.pageNeighbours =\n      typeof pageNeighbours === \"number\"\n        ? pageNeighbours : 2\n\n    this.totalPages = Math.ceil(this.totalRecords / this.pageLimit);\n\n    this.state = { currentPage: 1 };\n  }\n\n  componentDidMount() {\n    this.gotoPage(1);\n  }\n\n  gotoPage = page => {\n    const { onPageChanged = f => f } = this.props;\n\n    const currentPage = Math.max(0, Math.min(page, this.totalPages));\n\n    const paginationData = {\n      currentPage,\n      totalPages: this.totalPages,\n      pageLimit: this.pageLimit,\n      totalRecords: this.totalRecords\n    };\n\n    this.setState({ currentPage }, () => onPageChanged(paginationData));\n  };\n\n  handleClick = (page, evt) => {\n    evt.preventDefault();\n    this.gotoPage(page);\n  };\n\n  handleMoveLeft = evt => {\n    evt.preventDefault();\n    this.gotoPage(this.state.currentPage - this.pageNeighbours * 2 - 1);\n  };\n\n  handleMoveRight = evt => {\n    evt.preventDefault();\n    this.gotoPage(this.state.currentPage + this.pageNeighbours * 2 + 1);\n  };\n\n  fetchPageNumbers = () => {\n    const totalPages = this.totalPages;\n    const currentPage = this.state.currentPage;\n    const pageNeighbours = this.pageNeighbours;\n\n    const totalNumbers = this.pageNeighbours * 2 + 3;\n    const totalBlocks = totalNumbers + 2;\n\n    if (totalPages > totalBlocks) {\n      let pages = [];\n\n      const leftBound = currentPage - pageNeighbours;\n      const rightBound = currentPage + pageNeighbours;\n      const beforeLastPage = totalPages - 1;\n\n      const startPage = leftBound > 2 ? leftBound : 2;\n      const endPage = rightBound < beforeLastPage ? rightBound : beforeLastPage;\n\n      pages = range(startPage, endPage);\n\n      const pagesCount = pages.length;\n      const singleSpillOffset = totalNumbers - pagesCount - 1;\n\n      const leftSpill = startPage > 2;\n      const rightSpill = endPage < beforeLastPage;\n\n      const leftSpillPage = LEFT_PAGE;\n      const rightSpillPage = RIGHT_PAGE;\n\n      if (leftSpill && !rightSpill) {\n        const extraPages = range(startPage - singleSpillOffset, startPage - 1);\n        pages = [leftSpillPage, ...extraPages, ...pages];\n      } else if (!leftSpill && rightSpill) {\n        const extraPages = range(endPage + 1, endPage + singleSpillOffset);\n        pages = [...pages, ...extraPages, rightSpillPage];\n      } else if (leftSpill && rightSpill) {\n        pages = [leftSpillPage, ...pages, rightSpillPage];\n      }\n\n      return [1, ...pages, totalPages];\n    }\n\n    return range(1, totalPages);\n  };\n\n  render() {\n    if (!this.totalRecords) return null;\n\n    if (this.totalPages === 1) return null;\n\n    const { currentPage } = this.state;\n    const pages = this.fetchPageNumbers();\n\n    return (\n      <Fragment>\n        <nav>\n          <ul className=\"pagination\">\n            {\n              currentPage>1 && \n              <li\n                  className=\"page-item\"\n                >\n                  <a\n                    className=\"page-link\"\n                    href=\"#\"\n                    onClick={e => this.handleClick(currentPage - 1, e)}\n                  >\n                    &lsaquo;\n                  </a>\n                </li>\n            }\n            {pages.map((page, index) => {\n              if (page === LEFT_PAGE)\n                return (\n                  <li key={index} className=\"page-item\">\n                    <a\n                      className=\"page-link\"\n                      href=\"#\"\n                      aria-label=\"Previous\"\n                      onClick={this.handleMoveLeft}\n                    >\n                      <span aria-hidden=\"true\">&hellip;</span>\n                    </a>\n                  </li>\n                );\n\n              if (page === RIGHT_PAGE)\n                return (\n                  <li key={index} className=\"page-item\">\n                    <a\n                      className=\"page-link\"\n                      href=\"#\"\n                      aria-label=\"Next\"\n                      onClick={this.handleMoveRight}\n                    >\n                      <span aria-hidden=\"true\">&hellip;</span>\n                    </a>\n                  </li>\n                );\n\n              return (\n                <li\n                  key={index}\n                  className={`page-item${\n                    currentPage === page ? \" active\" : \"\"\n                  }`}\n                >\n                  <a\n                    className=\"page-link\"\n                    href=\"#\"\n                    onClick={e => this.handleClick(page, e)}\n                  >\n                    {page}\n                  </a>\n                </li>\n              );\n            })}\n            \n            {\n              currentPage<this.totalPages && \n              <li\n                  className=\"page-item\"\n                >\n                  <a\n                    className=\"page-link\"\n                    href=\"#\"\n                    onClick={e => this.handleClick(currentPage + 1, e)}\n                  >\n                    &rsaquo;\n                  </a>\n                </li>\n            }\n          </ul>\n        </nav>\n      </Fragment>\n    );\n  }\n}\n\nPagination.propTypes = {\n  totalRecords: PropTypes.number.isRequired,\n  pageLimit: PropTypes.number,\n  pageNeighbours: PropTypes.number,\n  onPageChanged: PropTypes.func\n};\n\nexport default Pagination;\n","\nimport React from 'react'\nimport ReactDOM from 'react-dom'\nimport Example from './example'\nimport { DndProvider } from 'react-dnd'\nimport HTML5Backend from 'react-dnd-html5-backend'\nimport TouchBackend from 'react-dnd-touch-backend'\nimport Pagination from './components/Pagination'\nimport * as Todos from './todos.json';\n\nclass App extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.backend = (\"ontouchstart\" in document.documentElement) ? TouchBackend : HTML5Backend;\n\t\tthis.state = {\n\t\t\tlist: Todos.default.filter(todo => todo.id <= 10),\n\t\t\tpageLimit: 10\n\t\t}\n\t}\n\n\tonPageChanged = (page) => {\n\t\tconst { currentPage, pageLimit } = page;\n\t\tlet start = (currentPage - 1) * pageLimit;\n\t\tconsole.log(start)\n\t\tthis.setState({\n\t\t\tlist: Todos.default.filter(todo => todo.id > start && todo.id<=start+pageLimit)\n\t\t})\n\t}\n\trender() {\n\t\tconst { list, pageLimit } = this.state;\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t<div className=\"App\">\n\t\t\t\t\t<DndProvider backend={this.backend}>\n\t\t\t\t\t\t<Example />\n\t\t\t\t\t</DndProvider>\n\t\t\t\t</div>\n\t\t\t\t<div>\n\t\t\t\t\t{\n\t\t\t\t\t\tlist.map(todo => <p key={todo.id}>{todo.id} - {todo.title}</p>)\n\t\t\t\t\t}\n\t\t\t\t</div>\n\t\t\t\t<Pagination\n\t\t\t\t\ttotalRecords={Todos.default.length}\n\t\t\t\t\tpageLimit={pageLimit}\n\t\t\t\t\tpageNeighbours={3}\n\t\t\t\t\tonPageChanged={this.onPageChanged}\n\t\t\t\t/>\n\t\t\t</div>\n\t\t)\n\t}\n}\n\nconst rootElement = document.getElementById('root')\nReactDOM.render(<App />, rootElement)\n"],"sourceRoot":""}